name: Python lint and test

on:
  push:
    branches: [master, dev, firebase-emulator]
    paths: [".github/workflows/firebase-python-ci.yaml", "server/**"]

jobs:
  test:
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
        


      - name: Install dependencies
        working-directory: ./server
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: Install Node.js 18.x for Firebase
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17.x'
          distribution: 'temurin'
        # - name: Lint with ruff
        #   working-directory: ./server
        #   run: |
        #     ruff app/**/*.py
           
      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash
      
      - name: Cache Firebase CLI
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase
          key: ${{ runner.os }}-firebase-${{ hashFiles('**/firebase.json') }}

      - name: Run tests with pytest and Firebase Emulator
        working-directory: ./server
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          API_KEY: ${{ secrets.API_KEY }}
          APP_ID: ${{ secrets.APP_ID }}
          AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          SERVICE_ACCOUNT_FILE: ${{ secrets.SERVICE_ACCOUNT }}
        run: |
          echo "$SERVICE_ACCOUNT_FILE" > service_account.json
          firebase emulators:exec './test.sh' --token "${FIREBASE_TOKEN}"
        
            